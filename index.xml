<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FarlandsCoreMod</name>
    </assembly>
    <members>
        <member name="M:FarlandsCoreMod.Attributes.SO.#ctor(System.String,System.Type)">
            <summary>
            Modifica la escena utilizando una clase
            </summary>
            <param name="sceneName">nombre de la escena</param>
            <param name="type">clase a utilizar</param>
        </member>
        <member name="T:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod">
            <summary>
                FarlandsEasyMod es el mod en si 
            </summary>
        </member>
        <member name="F:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod.Mod">
            <summary>
                Informacion del mod en DynValue -> LUA
            </summary>
        </member>
        <member name="F:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod.Tag">
            <summary>
                Es el identificador del mod, ejemplo MOD("francoPeta")
            </summary>
        </member>
        <member name="F:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod.PathValue">
            <summary>
                Diccionario que contiene la ruta y el contenido de los archivos del mod
            </summary>
        </member>
        <member name="F:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod.ConfigFile">
            <summary>
               Configuracion del mod
            </summary>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod.LoadZip(System.String)">
            <summary>
                carga un archivo zip y lo guarda en el diccionario
                Abertencias: CIUDADO
            </summary>
            <param name="zipPath">La direccion del zip</param> 
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod.LoadFolder(System.String,System.String)">
            <summary>
                Cargar mod desde carpeta en vez dedde zip
                TODO: comprobar
            </summary>
            <param name="path">Direccin donde esta</param>
            <param name="acumPath">Direccion de lo que tengo ni idea</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod.FromZip(System.String)">
            <summary>
                Carga el mod del zip en en un FarlandsEasyMod
                Abvertencias: CIUDADO
            </summary>
            <param name="zipPath">Direccion donde esta el zip</param>
            <returns>Desvuelve un el mod en FarlandsEasyMod</returns>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod.LoadAndAddZip(System.String)">
            <summary>
                Carga un archivo ZIP, crea una instancia de <see cref="T:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod"/> y ejecuta el archivo main.lua.
                Abvertencias: CIUDADO
            </summary>
            <param name="zipPath">Direccion donde eta el zip</param>
        </member>
        <member name="P:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod.Item(System.String)">
            <summary>
                Getters y Setters de PathValue
            </summary>
            <param name="path">Es una direccion, ¿De que? Ni puta idea</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod.GetFilesInFolder(System.String,System.String)">
            <summary>
                Obtiene una lista de archivos en una carpeta específica dentro del diccionario PathValue.
            </summary>
            <param name="t">Un prefijo que se añadirá a cada ruta de archivo en el resultado.</param>
            <param name="folder">La carpeta dentro de PathValue de la cual se quieren obtener los archivos.</param>
            <returns>
            Un array de strings que contiene las rutas de los archivos en la carpeta especificada, con el prefijo t añadido a cada ruta.
            </returns>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.FarlandsEasyMod.ExecuteMain">
            <summary>
               Ejecuta el archivo main.lua
               y guarda la informacion del mod
            </summary>
        </member>
        <member name="T:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions">
            <summary>
                **Clase** donde guardamos las funciones LUA   
                > ME CAGO EN MI PUTA VIDA
            </summary>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.MOD(System.String)">
            <summary>
            TODO: hacer
            </summary>
            <param name="tag">Nombre/Identificador del MOD</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.config(System.String,System.String,MoonSharp.Interpreter.DynValue,System.String)">
            <summary>
            descrcion basica TODO: hacer luego
            </summary>
            <example>
            > _mod_.config = guarda las secciones que haya  
            > _mod_.config guarda la configuracion del mod  
            > if -> si la configuracion es un booleano  
            >   agremaos la entra a la configuracion  
            >   Cojes el mod en LUA  
            >   Cojer la sepcion  
            >   Cojer la clave que devulva el valor  
            </example>
            <param name="section">La seccion de la configuracion, puede haber varias</param>
            <param name="key">codigo de la configuracion</param>
            <param name="def">valor de la configuracion</param>
            <param name="description">descripcion de ella</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.get_input(System.String)">
            <summary>
            Devuelve si as pulsado el boton o tecla especificada  
            </summary>
            <param name="input">Input esperado</param>
            <example>
            > Obtiene el player
            > Si el input especificado está pulsado
            </example>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.execute_command(System.String)">
            <summary>
            TODO
            </summary>
            <param name="_comando">Comando a ejecutar</param>
            <example>
            > Si no existe el objeto de comandos  
            > Obtiene la lista de comandos  
            > Divide el comando en palabras  
            > Recorre la lista de comandos  
            > Si el comando es igual al _comando  
            > Codigo Original :)
            </example>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.load_scene(MoonSharp.Interpreter.DynValue)">
            <summary>
            Carga la escena especificada por nombre o índice.  
            <param name="scene">puede ser el nombre o indice</param>
            </summary>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.texture_override(MoonSharp.Interpreter.DynValue,MoonSharp.Interpreter.DynValue)">
            <summary>
            TODO
            </summary>
            <example>
            > Si no existe el objeto de comandos  
            > si un parametro, el nombre del archivo es la textura que va ah remplazar (no recomendado)  
            > si dos parametros, el primero es el nombre de la textura que va ah remplazar y el segundo es la ruta de la textura  
            </example>
            <param name="arg0"></param>
            <param name="arg1"></param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.sprite_override(System.String,System.Int32[],System.String)">
            <summary>
            En vez de remplaza una region de la textura  
            </summary>
            <param name="origin">textura que se va a remplazar</param>
            <param name="position">posicion inicial(abajo -> arriba, izquierda -> derecha)</param>
            <param name="path">direccion del archivo</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.portrait_override(System.String,System.String)">
            <summary>
            Es un **texture_override** pero con un personaje  
            </summary>
            <example>
            > Crea una función en LUA que se ejecuta cuando se llama a la función  
            > La función llama a **texture_override** con los parametros que se le pasan  
            > **texture_override** remplaza la textura  
            </example>
            <param name="origin">portrait a reemplazar</param>
            <param name="path">dirección del archivo</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.add_language(System.String)">
            <summary>
            Se llama add_language, ¿Que cres que va hah hacer?    
            </summary>
            <param name="path">direccion del json</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.print(System.String)">
            <summary>
            printea el texto  
            </summary>
            <param name="txt">lo que le pases lo dibuja por consola</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.get_object(System.Collections.Generic.List{MoonSharp.Interpreter.DynValue})">
            <summary>
            te da un objeto dada la ruta de los objetos  
            </summary>
            <param name="args">ruta en gameObject</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.find_object(System.String,System.String)">
            <summary>
            Te busca un gameObject en la escena por el nombre (cuidado con objeton con el mismo nombre)  
            </summary>
            <param name="args">nombre del objeto</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.add_item(MoonSharp.Interpreter.DynValue,System.Int32)">
            <summary>
              
            > si el id es un numero da el objeto por el id  
            > si ex 0x es un hexadecimal  
            > si es un string busca el objeto por el nombre  
            </summary>
            <param name="id">Id del objeto, sirve (nombre (creo), id, id en exadecimal)</param>
            <param name="amount">Cantidad a añadir (no opcional)</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.add_credits(System.Int32)">
            <summary>
            Añade los creidtos especificados  
            </summary>
            <param name="amount">Cantidad añadir</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.create_object(System.String)">
            <summary>
            Crea un nuevo gameObject con el nombre especificado  
            </summary>
            <param name="name">nombre del gameObject a crear</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.create_inventory_item(MoonSharp.Interpreter.DynValue)">
            <summary>
            Añade a la lista un objeto de inventario  
            > Crea un nuevo objeto de inventario  
            > Si  
            </summary>
            <param name="args">name->string, type->string, sprite->string, buy_price->int, sell_price->int, stackeable->bool, matter_percent->float</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.create_plant(MoonSharp.Interpreter.DynValue)">
            <summary>
            agrega a una tabla un objeto de planta  
            > algomas  
            > genera la planta  
            >   
            > agrega la planta  
            > devuelve el id  
            </summary>
            <param name="args">
            name->string, days_for_death->int, days_for_stage->int, grow_season->int, resources->table->(item->int, algomas->X, algomas->X), seed->string, stage_1->string, stage_2->string, stage_3->string, stage_4->string, stage_5->string
            </param> 
        </member>
        <!-- Badly formed XML comment ignored for member "M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.create_seed(System.Int32,System.Collections.Generic.List{MoonSharp.Interpreter.DynValue})" -->
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.translate_inventory_item(System.Int32,System.Collections.Generic.List{MoonSharp.Interpreter.DynValue},System.Collections.Generic.List{MoonSharp.Interpreter.DynValue})">
            <summary>
            Traducion del objeto de inventario
            </summary>
            <param name="id">id del objeto</param>
            <param name="name">nombres</param>
            <param name="description">descripciones</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.create_scene(System.String)">
            <summary>
            Crea una escena con el nombre
            </summary>
            <param name="name">nombre de la escena</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.add_command(System.String,MoonSharp.Interpreter.DynValue,System.String)">
            <summary>
            añade un comando a la terminal  
            > sufrimiento TODO  
            </summary>
            <param name="name">nombre del comando</param>
            <param name="LuaFunc">funcion lua</param>
            <param name="help">texto del help de help</param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GlobalFunctions.rayCast(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Int32,MoonSharp.Interpreter.UserData)">
            <summary>
            TODO agregar los nuevos
            </summary>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.mathsFuncions">
            <summary>
            MATENME
            </summary>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.GetAllGameObjectsInScene(UnityEngine.SceneManagement.Scene)">
            <summary>
             MATENME
            </summary>
            <param name="scene">la escena necesaria</param>
            <returns>allObjects</returns>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaFunctions.AddChildObjects(UnityEngine.Transform,System.Collections.Generic.List{UnityEngine.GameObject})">
            <summary>
            MATENME
            </summary>
            <param name="parent"></param>
            <param name="allObjects"></param>
        </member>
        <member name="T:FarlandsCoreMod.FarlandsLua.Functions.LuaGameObjectComponent">
            <summary>
                Clase de C# que la gracia es permitir ejecutar LUA en un GameObject como si fuera nativo
            </summary>
        </member>
        <member name="P:FarlandsCoreMod.FarlandsLua.Functions.LuaGameObjectComponent.StartFunction">
            <summary>
              Metodo donde guarda el codigo LUA que se ejecutara con Start de Unity 
            </summary>
        </member>
        <member name="P:FarlandsCoreMod.FarlandsLua.Functions.LuaGameObjectComponent.UpdateFunction">
            <summary>
             Metodo donde guarda el codigo LUA que se ejecutara con Update de Unity
            </summary>
        </member>
        <member name="P:FarlandsCoreMod.FarlandsLua.Functions.LuaGameObjectComponent.Result">
            <summary>
                Resultado de la ejecucion del script LUA : SUPONGO
            </summary>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.Functions.LuaGameObjectComponent.Start">
            <summary>
                Metodo Start de Unity, 
            </summary>
        </member>
        <member name="F:FarlandsCoreMod.FarlandsLua.LuaManager.UnityDebug">
            <summary>
            - clase de BepInEx que se encarga de cargar los mods  
            - Configuracion que se agrega al BepInEx  
            </summary>
        </member>
        <member name="F:FarlandsCoreMod.FarlandsLua.LuaManager.EasyMods">
            <summary>
            Lista de mods cargados  
            </summary>
        </member>
        <member name="F:FarlandsCoreMod.FarlandsLua.LuaManager.OnEvents">
            <summary>
            > TODO: ser menos gilipollas  
            </summary>
        </member>
        <member name="F:FarlandsCoreMod.FarlandsLua.LuaManager.LUA">
            <summary>
            LUA es un script que se encarga de ejecutar el codigo LUA
            </summary>
        </member>
        <member name="P:FarlandsCoreMod.FarlandsLua.LuaManager.MOD">
            <summary>
            name: MOD
            especie de getter y setter para la variable global _mod_
            </summary>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.LuaManager.ExecuteEvent(System.String[])">
            <summary>
                name: ExecuteEvent
                Ejecuta un evento en todos los mods cargados
            </summary>
            <param name="ev"> No se que es </param>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.LuaManager.Init">
            <summary>
                Método para inicializar el Manager
                Se inicia al iniciar el juego
            </summary>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.LuaManager.GetFilesInMod(System.String)">
            <summary>
               Método para obtener los archivos de un mod  
            </summary>
            <param name="path">Direccion del archivo</param>
            <returns></returns>
        </member>
        <member name="M:FarlandsCoreMod.FarlandsLua.LuaManager.GetFromMod(System.String)">
            <summary>
            Método para obtener datos de un mod  
            ¿cuales datos? Ni puta idea  
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:FarlandsCoreMod.Properties.Resources">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:FarlandsCoreMod.Properties.Resources.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:FarlandsCoreMod.Properties.Resources.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
            </summary>
        </member>
        <member name="P:FarlandsCoreMod.Properties.Resources.Version">
            <summary>
              Busca una cadena traducida similar a 0.1.3.
            </summary>
        </member>
        <member name="T:FarlandsCoreMod.Resources.Farlands">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:FarlandsCoreMod.Resources.Farlands.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:FarlandsCoreMod.Resources.Farlands.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
            </summary>
        </member>
        <member name="M:CommandTerminal.CommandShell.RegisterCommands">
            <summary>
            Uses reflection to find all RegisterCommand attributes
            and adds them to the commands dictionary.
            </summary>
        </member>
        <member name="M:CommandTerminal.CommandShell.RunCommand(System.String)">
            <summary>
            Parses an input line into a command and runs that command.
            </summary>
        </member>
    </members>
</doc>
